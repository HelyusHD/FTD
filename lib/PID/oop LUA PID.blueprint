{"FileModelVersion":{"Major":1,"Minor":0},"Name":"oop LUA PID","Version":2,"SavedTotalBlockCount":30,"SavedMaterialCost":877.0,"ContainedMaterialCost":0.0,"ItemDictionary":{"617":"da59d582-9254-4091-988e-b670dcabe84a","606":"515ee20d-20d8-4195-bea5-213e6f1fd929","610":"f94702c9-cb55-49e3-8cc4-138288fa1f13","608":"4c24445d-a29b-446e-b03f-29e570e9d47d","605":"01a87958-93cf-4efa-857f-10913b0573d9","166":"a70f015e-a9fe-45f1-958c-fc501ec7e2ea","382":"0706d2b0-c244-4e0f-8577-79338cb073cf","598":"8746f5b3-e2a6-4067-95bc-9da3900690f8","572":"9413049d-a4f7-4c1c-8b8a-d2f1f4c18e53","396":"d3924bae-be5a-43a0-be19-64fc7c8d6059","448":"e63040c9-0027-4fd3-be30-67fe3e950140"},"Blueprint":{"ContainedMaterialCost":0.0,"CSI":[0.0,0.0,-1.0,0.0,-1.0,0.0,0.0,1688.64978,0.01895,0.0,0.0,0.0,0.0,8999.999658,0.0,1.0,1.0,0.0,1.0,10.388117,98.883873,-1.0,0.0,9000.0,1.0,1.0,0.0,0.0,0.0,0.0,20.4,0.0,0.1,0.1,1.0,1.0,3.0,-1.0,0.0,-1.0,0.0,-1.0,1.0,0.0,-1.0,0.0,0.0,5.781447,0.0,-1.0,0.0,192.0,-1.0,42.0,0.0,-1.0,0.0,0.0,500.0,-1.0,12.0,0.0,0.0,0.0,9.293044,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,-1.0,-1.0],"COL":["0.01176471,0,0,0","1,0,0,0.5","0,1,0,0.5","0,0,1,0.5","0.1,0.1,0.1,0.5","0.3,0.3,0.3,0.5","0.5,0.5,0.5,0.5","1,1,1,0.1","1,1,1,0.5","1,1,1,0.99","1,0.9215686,0.01568628,0.99","0,1,1,0.99","1,0,1,0.99","0.8114681,0.6114951,0.2528696,0.01171898","0.1458021,0.3237849,0.9920594,0.1153338","0.43453,0.09945883,0.9626449,0.5597456","0.492697,0.5958002,0.5921708,0.6564695","0.5861734,0.05558943,0.4480143,0.3212953","0.3884227,0.4416751,0.1474586,0.4869584","0.05409335,0.07710453,0.8987476,0.9591376","0.3159673,0.09875587,0.9372774,0.8479899","0.8775693,0.1552047,0.002325572,0.2913787","0.8607959,0.7488396,0.1077802,0.03947794","0.7380255,0.2187656,0.06887759,0.4128177","0.395632,0.7734498,0.7634439,0.01187468","0.01762479,0.2942341,0.2485789,0.769115","0.6957356,0.005375924,0.9122923,0.3657253","0,0,0,0","0,0,0,0","0,0,0,0","0.972549,0.5,0.2,1","0.298039,0.4,1,1"],"SCs":[],"BLP":["-1,-2,-1","-1,-2,0","-1,-2,1","-1,-1,-1","-1,-1,0","-1,-1,1","0,-2,-1","0,-2,0","0,-2,1","0,-1,-1","0,-1,0","0,-1,1","1,-2,-1","1,-2,0","1,-2,1","1,-1,-1","1,-1,0","1,-1,1","-6,-2,0","6,-2,0","0,-2,-6","0,-2,6","0,1,0","-1,0,0","1,0,0","-2,-2,0","2,-2,0","0,-2,-2","0,-2,2","0,0,0"],"BLR":[2,18,0,2,1,0,0,0,0,2,0,0,2,16,0,2,3,0,8,8,8,8,2,2,2,3,1,2,0,8],"BP1":null,"BP2":null,"BCI":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"BEI":null,"BlockData":"BgAAHAAAAAcAAQAAAAAAAAIAAAAAAAADAAAAAAAAXRsBAAAAAAAABAEAAAASAAAqAAAAHACJAAAAAAAAJIgAAAAAAIZ7AAAAAADsYgAAABUAXQAAAAAVAF0bAQAAFQAAAAQAAIBAAgAEzcxMPgYABM3MTD4AAAQCAAAAEwAAKgAAABwAiQAAAAAAACSIAAAAAACGewAAAAAA7GIAAAAVAF0AAAAAFQBdGwEAABUAAAAEAACAQAIABM3MTL4GAATNzEw+AAAEAwAAABQAACoAAAAcAIkAAAAAAAAkiAAAAAAAhnsAAAAAAOxiAAAAFQBdAAAAABUAXRsBAAAVAAAABAAAgEADAATNzEy+BgAEzcxMPgAABAQAAAAVAAAqAAAAHACJAAAAAAAAJIgAAAAAAIZ7AAAAAADsYgAAABUAXQAAAAAVAF0bAQAAFQAAAAQAAIBAAwAEzcxMPgYABM3MTD4AAAQFAAAAFgAADgAAAAcAAAAAAAAAAF0bAQAAAAAAAAQIAAAAHQAABwAAAAcAXRsBAAAAAAAABCUAAAA=","VehicleData":"8FsKAQAAAAAOAAAAAAAPJwAAAAAA0AcAAAAAAJ9xBAAAAAAADgAAAAAADycAAAAAAKCGAQAAAABXLgAAAAAAAAcAAAAAAAAAAAAAAABHKQEAAAAAABUAAAAAAAAAAAAAAABzJwAAAAAAZAAAAAAAAD41FAAAAAAABwAAACMAAQAAAAAAAAoABM3MzD0LAATNzMw9DAAEzczMPQ0ABM3MzD0OAATNzMw9UkMAAAAAAAAHAAAAAAABAAAAAAAAwX1WnwAAAAAHAAAABwAAAAAAAAAAAAAEAQAAAMRKAAAAAAAABwAAAAAAAAAAAAAAADntBwAAAAAABwAAAAcAAQAAAAAAAAAABIEWRj8r3goAAAAAAAcAAAAIAAEAAAAAAAAAAAEBAQABAdCrZQAAAAAADgAAAAsAAAAAAAAAAAEAAAAACwAAAAEBEQAEAAAAAMInYQAAAAAABwAAAEYAAAAAAAAAAAAABAAASEIKAAQAAMjBDwAEAABcQhQABAAA+kMZAAQAgDtFMgAEAEAcRjcABABAHEYeAAQAAIA/IwAEAACAPygABAAAoEEyjlAAAAAAAAcAAAAAAAAAAAAAAAAuywQAAAAAAAcAAAAAACSIAAAAAAAS6AEAAAAAAA4AAAAAAA8nAAAAAACghgEAAAAAoflWAAAAAAAOAAAAAAAPJwAAAAAAoGNvAAAAAA==","designChanged":false,"blueprintVersion":2,"blueprintName":"oop LUA PID","SerialisedInfo":{"JsonDictionary":{},"IsEmpty":true},"Name":null,"ItemNumber":448,"LocalPosition":"10142.8,100,10144.56","LocalRotation":"-1.616256E-08,-0.05922079,-3.307054E-08,-0.9982449","ForceId":1542308967,"TotalBlockCount":30,"MaxCords":"6,1,6","MinCords":"-6,-2,-6","BlockIds":[617,606,617,617,610,617,608,605,617,617,606,617,617,606,617,617,610,617,166,166,166,166,382,598,598,572,572,572,572,396],"BlockState":"=0,30","AliveCount":30,"BlockStringData":["-- this is a LUA PID\r\n-- at the bottom there is an example on how to use this\r\n\r\n-- this is a PID object\r\nfunction PID()\r\n    return {\r\n        -- those are the attributes of the PID\r\n        Kg,\r\n        Ki,\r\n        Kd,\r\n        setpoint,\r\n        IMax =  1,\r\n        IMin = -1,\r\n        OutMax =  1,\r\n        OutMin = -1,\r\n        previousError = 0,\r\n        integral = 0,\r\n        derivative = 0,\r\n        lastGameTime = 0,\r\n\r\n        -- those are the methods of the PID\r\n        settings = function(self,Kg,Ki,Kd)\r\n            self.Kg = Kg\r\n            self.Ki = Ki\r\n            self.Kd = Kd\r\n        end,\r\n        drive = function(self,measurement,gametime,setpoint)\r\n            self.setpoint = setpoint\r\n            local error     = self.setpoint - measurement\r\n            local drive\r\n            local timeDelta = 0.25\n        \r\n            self.integral = self.integral + (error*timeDelta) * self.Ki\r\n            if (self.integral > self.IMax) then self.integral = self.IMax end\r\n            if (self.integral < self.IMin) then self.integral = self.IMin end\r\n        \r\n            self.derivative = (error - self.previousError)/timeDelta\n        \r\n            drive = self.Kg*error + self.derivative*self.Kd + self.integral\r\n            if (drive > self.OutMax) then drive = self.OutMax end\r\n            if (drive < self.OutMin) then drive = self.OutMin end\r\n        \r\n            self.previousError = error\r\n            self.lastGameTime = gametime\r\n            return drive\r\n        end\r\n    }\r\nend\r\n\r\n-- how this would look in FTD\r\nfunction Update(I)\r\n    if Pid_Roll == nil then\r\n        Pid_Roll = PID()\r\n        Pid_Roll:settings(0.001, 0.0001, 0.1)\r\n    end\n    if Pid_Pitch == nil then\r\n        Pid_Pitch = PID()\r\n        Pid_Pitch:settings(0.005, 0.0001, 0.1)\r\n    end\n    if Pid_Alt == nil then\r\n        Pid_Alt = PID()\r\n        Pid_Alt:settings(0.05, 0.001, 0.1)\r\n    end\n    local R = I:GetConstructRoll()\n    if R > 180 then R = R -360 end\n    local roll  = Pid_Roll:drive(-R, I:GetGameTime(),0)\n    local pitch = Pid_Pitch:drive(-I:GetConstructPitch(), I:GetGameTime(), 0)\n    local alt   = Pid_Alt:drive(I:GetConstructPosition().y, I:GetGameTime(), 100)\n    I:SetPropulsionRequest(3, \rroll)\n    I:SetPropulsionRequest(4, \rpitch)\n    I:SetPropulsionRequest(7, alt\r)\nI:Log(\"roll: \"..roll..\"   pitch: \"..pitch..\"   alt: \"..alt)\n\r\nend"],"BlockStringDataIds":[37],"GameVersion":"4.1.0.1","PersistentSubObjectIndex":0,"PersistentBlockIndex":38,"AuthorDetails":{"Valid":true,"ForeignBlocks":0,"CreatorId":"4970fa6b-6f8e-4cf9-8af8-b433aee7dda8","ObjectId":"3f34e03d-cb3a-4a87-bf30-3c749998c6b3","CreatorReadableName":"HelyusHD","HashV1":"3002b69e44cb7dc8d6db948c8b3d0f1d"},"BlockCount":30}}